[tox]
envlist =
    pyroma
    flake8
    docs
    py


[testenv]
commands = 
    pytest tests/
deps =
    pandas
    chembl_donwloader

whitelist_externals =
    C:\Windows\system32\xcopy.EXE
    E:\Program Files (x86)\GnuWin32\bin\mkdir.EXE
    E:\Program Files (x86)\GnuWin32\bin\cp.EXE
    E:\Program Files (x86)\GnuWin32\bin\cat.EXE
    E:\ProgramData\Anaconda2\envs\nochem\Scripts\sphinx-build.EXE
    /bin/cat
    /bin/cp
    /bin/mkdir
description = Run tests to check code validity.

[testenv:pyroma]
commands = 
    pyroma .
deps =
    pyroma
skip_install = true
description = Make sure setup.cfg is properly written out.

[testenv:flake8]
skip_install = true
deps = 
    flake8
    flake8-bandit
    flake8-bugbear
    flake8-colors
    flake8-commas
    flake8-comprehensions
    flake8-docstrings
    flake8-import-order
    flake8-print
    flake8-use-fstring
    pep8-naming
    pydocstyle
commands =
    flake8 src/mutants-in-pcm/ setup.py
description = Run the flake8 tool with several plugins (bandit, docstrings, import order, pep8 naming) to check code quality.

[testenv:docs]
changedir = docs
extras = 
    docs
commands =
    mkdir -p {envtmpdir}
    cp -r source {envtmpdir}/source
    sphinx-build -W -b html -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/html
    sphinx-build -W -b coverage -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/coverage
    cp -r {envtmpdir}/build build
    cat {envtmpdir}/build/coverage/c.txt
    cat {envtmpdir}/build/coverage/python.txt

[testenv:docs-windows]
changedir = docs
extras = 
    docs
commands =
    mkdir -p {envtmpdir}
    xcopy source {envtmpdir}\source\ /E /H /Y /Q
    sphinx-build -W -b html -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/html
    sphinx-build -W -b coverage -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/coverage
    xcopy {envtmpdir}\build build\ /E /H /Y /Q
    type {envtmpdir}/build/coverage/c.txt
    type {envtmpdir}/build/coverage/python.txt
